++ mktemp -d
+ TMP_DIR=/tmp/tmp.oI1KNGBH5T
+ cd /tmp/tmp.oI1KNGBH5T
++ nproc
+ CPU=1
++ mktemp
+ FASTQ=/tmp/tmp.A9oPuA3HIF
+ sed 's/\t/\n/'
+ shuf
+ paste - -
+ fastq_to_fasta -Q33
+ zcat /bbx/input/reads.fq.gz
+ GAP_VALUE=15
+ LOAD_SKG=0
+ GENOME_SIZE=60000000
+ SparseAssembler g 15 k 51 LD 0 GS 60000000 NodeCovTh 2 EdgeCovTh 2 PathCovTh 300 f /tmp/tmp.A9oPuA3HIF
Command: 
Programfile g GAP_VALUE k KMER_SIZE LD LOAD_SKG GS GENOME_SIZE TrimN TRIM_READS_WITH_N f INPUT_FILE1 f INPUT_FILE2 i1 INWARD_PAIR_END1 i2 INWARD_PAIR_END2 o1 OUTWARD_PAIR_END1 o2 OUTWARD_PAIR_END2

Parameters:
k: kmer size, support 15~127.
g: number of skipped intermediate k-mers, support 1-25.
f: single end reads. Multiple inputs shall be independently imported with this parameter.
i1 & i2 (or p1 & p2): inward paired-end reads.
o1 & o2 (or l1 & l2): outward paired-end reads.
GS: genome size estimation in bp (used for memory pre-allocation), suggest a large value if possible.(e.g. ~ 10x genome size)
LD: load a saved k-mer graph. 
BC: 1: build contigs.0: don't build.
NodeCovTh: coverage threshold for spurious k-mers, support 0-16. (default 1)
EdgeCovTh: coverage threshold for spurious links, support 0-16. (default 0)
PathCovTh: coverage threshold for spurious paths in the breadth-first search, support 0-100.
ResolveBranchesPE: 1: resolve branches with paired reads.0: single end assembly.
LinkCovTh: coverage threshold for spurious paired-end links, support 0-100.

Building the sparse k-mer graph, round: 1
1/1 files.
Processing file: /tmp/tmp.A9oPuA3HIF
Total bases: 34050
Total nodes: 367
Reading time: 10 secs.
Building the sparse k-mer graph, round: 2
1/1 files.
Processing file: /tmp/tmp.A9oPuA3HIF
Total nodes: 164
Reading time: 20 secs.
Graph simplification...
Min searching depth: 4
Max searching depth: 15
Current depth: 4
0
Current depth: 7
0
Current depth: 10
0
Current depth: 13
0
Build contigs...
+ cp Contigs.txt /bbx/output/contigs.fa
